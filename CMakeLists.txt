CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET( PROJECT_NAME HistoReg )

# Set project name 
PROJECT( ${PROJECT_NAME} )
 
#Find libraries
FIND_PACKAGE( ITK REQUIRED )
INCLUDE( ${ITK_USE_FILE} )

# add greedy files to compilation
FILE( GLOB_RECURSE GREEDY_HEADERS "${PROJECT_SOURCE_DIR}/greedy/src/*.h" )
FILE( GLOB_RECURSE GREEDY_SOURCES_TEMPLATES_1 "${PROJECT_SOURCE_DIR}/greedy/src/*.hxx" )
FILE( GLOB_RECURSE GREEDY_SOURCES_TEMPLATES_2 "${PROJECT_SOURCE_DIR}/greedy/src/*.txx" )
FILE( GLOB_RECURSE GREEDY_SOURCES_UTILS "${PROJECT_SOURCE_DIR}/greedy/utilities/*.h" )
SET( GREEDY_SOURCES_ALL 
  ${GREEDY_HEADERS} 
  ${GREEDY_SOURCES_TEMPLATES_1} 
  ${GREEDY_SOURCES_TEMPLATES_2} 
  ${GREEDY_SOURCES_UTILS} 
  ${PROJECT_SOURCE_DIR}/greedy/src/AffineCostFunctions.cxx
  ${PROJECT_SOURCE_DIR}/greedy/src/GreedyAPI.cxx
  ${PROJECT_SOURCE_DIR}/greedy/src/GreedyParameters.cxx
  ${PROJECT_SOURCE_DIR}/greedy/src/lddmm_data.cxx
  ${PROJECT_SOURCE_DIR}/greedy/src/MultiImageRegistrationHelper.cxx  
)

INCLUDE_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}/greedy/src/
  ${PROJECT_SOURCE_DIR}/greedy/src/bk
  ${PROJECT_SOURCE_DIR}/greedy/src/dijkstra
  ${PROJECT_SOURCE_DIR}/greedy/src/ITKFilters
  ${PROJECT_SOURCE_DIR}/greedy/src/ITKFilters/include
  ${PROJECT_SOURCE_DIR}/greedy/src/macf
  ${PROJECT_SOURCE_DIR}/greedy/utilities
)

ADD_LIBRARY(GREEDY_LIB ${GREEDY_SOURCES_ALL})


# add c3d files to compilation
FILE( GLOB_RECURSE C3D_HEADERS "${PROJECT_SOURCE_DIR}/c3d/*.h" )
FILE( GLOB_RECURSE C3D_HEADERS_2 "${PROJECT_SOURCE_DIR}/c3d/adapters/*.h" )
FILE( GLOB_RECURSE C3D_SOURCES_TEMPLATES_1 "${PROJECT_SOURCE_DIR}/c3d/itkextras/*.hxx" )
FILE( GLOB_RECURSE C3D_SOURCES_TEMPLATES_2 "${PROJECT_SOURCE_DIR}/c3d/itkextras/*.txx" )
FILE( GLOB_RECURSE C3D_SOURCES_UTILS "${PROJECT_SOURCE_DIR}/c3d/utilities/*.h" )
FILE( GLOB_RECURSE C3D_SOURCES_EXT "${PROJECT_SOURCE_DIR}/c3d/external/GCv2p3/*.h" )
FILE( GLOB_RECURSE C3D_SOURCES_TEST "${PROJECT_SOURCE_DIR}/c3d/adapters/*.cxx" )

SET( C3D_SOURCES_ALL 
  ${C3D_HEADERS} 
  ${C3D_SOURCES_TEMPLATES_1} 
  ${C3D_SOURCES_TEMPLATES_2} 
  ${C3D_SOURCES_UTILS} 
#  ${PROJECT_SOURCE_DIR}/c3d/ConvertImageND.cxx
#  ${PROJECT_SOURCE_DIR}/c3d/adapters/ReadImage.cxx
#  ${PROJECT_SOURCE_DIR}/c3d/adapters/WriteImage.cxx
  ${C3D_SOURCES_TEST}
  ${C3D_SOURCES_EXT}
)

INCLUDE_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}/c3d/
  ${PROJECT_SOURCE_DIR}/c3d/utilities
  ${PROJECT_SOURCE_DIR}/c3d/itkextras
  ${PROJECT_SOURCE_DIR}/c3d/itkextras/RandomForest
  ${PROJECT_SOURCE_DIR}/c3d/adapters
  ${PROJECT_SOURCE_DIR}/c3d/external/GCv2p3

)

ADD_LIBRARY(C3D_LIB ${C3D_SOURCES_ALL})

# Add sources to executable
ADD_EXECUTABLE(
  ${PROJECT_NAME} 
  ${CMAKE_CURRENT_SOURCE_DIR}/src/HistoReg.cxx
  ${GREEDY_SOURCES_ALL}
  ${C3D_SOURCES_ALL}
)

# Link the libraries to be used
TARGET_LINK_LIBRARIES(
  ${PROJECT_NAME}
  ${ITK_LIBRARIES}
  ${GREEDY_LIB}
  ${C3D_LIB}
)

INSTALL( TARGETS ${PROJECT_NAME} 
  BUNDLE DESTINATION .
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  CONFIGURATIONS "${CMAKE_CONFIGURATION_TYPES}"
  PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
)
